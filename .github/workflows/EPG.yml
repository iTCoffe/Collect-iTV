name: EPG Update
on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '0 1,7,13,19 * * *'
env:
  TZ: Asia/Shanghai
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # 获取完整提交历史
    - name: Update EPG Files
      id: update
      run: |
        # 设置选项：errexit 和 pipefail
        set -o errexit
        set -o pipefail
        
        # 定义要下载的 URL 列表，去除重复
        epg_urls=(
          "https://epg.11214.xyz/pp.xml"  # 先检查这个
          "http://epg.51zmt.top:8000/e.xml"  # 验证并修正了URL
          "http://e.erw.cc/e.xml"           # 最后检查这个
        )
        
        changed=false
        # 检查 epg.xml 是否已存在
        if [ ! -f epg.xml ]; then
          # 如果文件不存在，初始化为空文件以避免后续 cmp 报错
          touch epg.xml
          changed=true
          echo "epg.xml 文件不存在，初始化新文件。"
        fi
        
        echo "开始检查 EPG 源..."
        echo "可用的 EPG 源数量: ${#epg_urls[@]}"
        
        # 使用临时文件
        temp_file=$(mktemp)
        new_source_url=""
        new_file_downloaded=false

        for url in "${epg_urls[@]}"; do
          echo "从 $url 下载 EPG 数据..."
          
          # 下载文件
          if wget -nv -O "$temp_file" "$url"; then
            # 检查文件是否有效
            if [ -s "$temp_file" ] && grep -q '<?xml' "$temp_file"; then
              echo "从 '$url' 下载成功，内容："
              head -n 10 "$temp_file"  # 显示文件前10行作为确认
              
              # 检查与本地文件的差异
              if ! cmp -s "$temp_file" epg.xml; then
                new_source_url="$url"
                new_file_downloaded=true
                
                # 移动新文件
                echo "EPG 文件内容已更改，使用从 '$url' 下载的新文件。"
                mv "$temp_file" epg.xml
                changed=true
                echo "EPG 文件已更新，来自源: $url"
                break  # 找到更新后可停止检查
              else
                echo "从 '$url' 下载的文件与本地 epg.xml 内容相同，跳过更新。"
              fi
            else
              echo "::error::从 '$url' 下载的文件无效或为空，请检查 URL 或文件内容。"
            fi
          else
            echo "::error::无法从 '$url' 下载 EPG 文件。"
          fi
        done

        if [ "$changed" = "true" ]; then
          echo "EPG 文件成功更新，来源为: $new_source_url"
        else
          if [ "$new_file_downloaded" = "true" ]; then
            echo "EPG 文件已更新，但从源 '$new_source_url' 更新后内容似乎与预期相同，请检查。"
          else
            echo "未检测到 EPG 文件变化或所有来源均不可用。"
          fi
        fi

        # 清理临时文件
        rm -f "$temp_file"

        # 将 changed 变量输出为环境变量，供后续步骤使用
        echo "changed=$changed" >> $GITHUB_ENV

    - name: 提交更改
      if: ${{ env.changed == 'true' }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add epg.xml
        git commit -m "EPG更新: $(date -R)"

    - name: Push changes
      if: $${{ env.changed == 'true' }}
      uses:
